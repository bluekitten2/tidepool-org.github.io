- title: Client Applications and Libraries
  components:

    - headline: The Blip application
      purpose: The client side implementation of Blip.
      github_name: blip
      description: Under active development. A system for integrating and analyzing diabetes data from a wide variety of sources, all in one place.

    - headline: Message app
      purpose: A browser-based, mobile-friendly message application
      github_name: clamshell
      description: Under active development. This is an application that can be used to get and read messages relating to health data. It uses user-api, seagull, and message-api from the client side to read and send messages. It allows patients and their care team to communicate with each other securely and to add context to the data being tracked by Tidepool.

    - headline: Visualization of diabetes data
      purpose: A visualization module for diabetes data
      github_name: tideline
      description: This is where the visualization code lies. Be sure to look at its README file and Wiki; there's a lot of information in there.

    - headline: API wrapper library
      github_name: platform-client
      naming_note:
      purpose: Centralizes access to the tidepool servers from a client app

- title: Server Management
  components:

    - headline: Discovery
      github_name: hakken
      naming_note: 'Hakken means "discovery" in Japanese.'
      purpose: Service Discovery
      description: Hakken provides a mechanism for services to find one another without having to store configuration information in each service. It also allows multiple copies of each service (including hakken itself). Hakken has one or more coordinators that communicate with one another to maintain a common list of other services. The services register themselves with hakken as they wake up. When and if they disappear, hakken will eventually notice the fact and remove them from the registry.

    - headline: Routing
      github_name: styx
      naming_note: "In Greek mythology, the river Styx separates the living world from Hades."
      purpose: "Routing requests from the public internet to the various private endpoints within Tidepool's backend."
      description: Styx is a service that uses hakken to discover services and route requests. It is essentially a software load balancer, but it integrates with hakken (and can be extended to integrate with other service discovery mechanisms) to find services. It also allows for integration with an authentication layer and intelligent forwarding, like consistent hashing. It is intended as a front-tier layer for a backend API.

    - headline: Server process management
      github_name: shio
      naming_note: The name comes from the Japanese word for the tide.
      purpose: "Managing a list of servers and processes to assign to those servers."
      description: 'Shio operates by combining "deployable tarballs" with "config tarballs" and running the application. Shio has two main concepts: servers and slots. Servers are the physical machines that you deploy to. Slots are deployment slots that exist on servers for deployment. You can have multiple different slots on the same server and deploy different things to that one server.'

    - headline: Metrics tracking
      github_name: highwater
      naming_note: The highwater mark is a metric about tides.
      purpose: To anonymize and isolate metrics tracking
      description: Acts as an interface to a third-party metrics system so that we can ensure that no personally-identifiable information (PII) leaks out of the Tidepool servers and into third party sites like our metrics site. It also allows us to change metrics companies without a lot of pain.

- title: Medical Data Storage
  components:

    - headline: Data Upload
      purpose: Manages uploads of health data. 
      github_name: jellyfish
      description: Under active development. Defines and enforces the format of the data that is uploaded to the Tidepool system. The data formats are documented in the <a href="../data-model-v1/v1">Data Model Pages</a>.

    - headline: Authorization client and server
      github_name: gatekeeper
      purpose: "Manages the authorization of users for various capabilities, including seeing each others' data."

    - headline: Data access API
      github_name: pool-whisperer
      naming_note: It talks to tidepools.
      purpose: Manages communication with tidepool data storage

- title: Useful libraries
  components:

    - headline: Testing
      purpose: A library to help in creating test fixtures and mocks
      github_name: salinity
      naming_note: '"Salinity is the only thing I could think of that you might want to test in a tidepool."'
      description: Under active development

    - headline: Time conversion
      purpose: Centralize time conversion and manipulation
      github_name: sundial
      description: Intended to create a central place for managing time formats, timezone management, and the like. Under active development.

    - github_name: tools
      headline: Tools to help in Tidepool development
      purpose: General repository of useful things.
      description: This repository contains runservers, which is a script to help get all the important bits of the tidepool platform running locally.

- title: User data storage
  components:

    - headline: User Login and ID
      github_name: user-api
      apiary_name: tidepooluserapi
      purpose: "User login and session management"
      description: The Tidepool User API is used to manage the user login information and pretty much nothing else. (Temporarily, it also manages sessions, but that will change.) It manages authentication and the most basic user information necessary for logging in. This library is written in JavaScript and will soon be replaced by shoreline.

    - headline: User Login and ID
      github_name: shoreline
      purpose: "User login and session management"
      naming_note: The shoreline is the place where users encounter a tidepool.
      description: The Tidepool User API is used to manage the user login information and pretty much nothing else. (Temporarily, it also manages sessions, but that will change.) It manages authentication and the most basic user information necessary for logging in. This is written in Go and will soon replace user-api.

    - headline: User Metadata
      purpose: Tracking user metadata with per-user encryption.
      github_name: seagull
      apiary_name: tidepoolseagull
      description: Seagull manages user metadata in a storage vault that encrypts each user's private data with a different key. This helps to keep things secure against unauthorized access to the data store. It also provides a framework for generating and managing IDs and keys that can be used for keeping user data secure in other storage systems.

    - headline: Messages
      purpose: Recording time-stamped message threads sent to a group (as defined by the armada)
      github_name: message-api
      apiary_name: tidepoolmessages
      description: Tracking health data will also often involve tracking commentary on that data by the patient and possibly the patient's care group. The message API provides an infrastructure for tracking a secure message store with timestamps to allow data to be associated with other health events. Eventually this message system will probably be integrated into the event stream.

- title: "--Deprecated--"
  components:

    - headline: Raw data tracking and provenance
      purpose: Tracking blocks of raw data, including the source of that data and all modifications to it.
      github_name: sandcastle
      description: This repository is no longer being actively developed.

    - headline: Groups
      purpose: Manage groups of users for messaging and authorization
      github_name: armada
      naming_note: An armada is a group of ships.
      apiary_name: tidepoolarmada
      description: This API is being deprecated in favor of gatekeeper.

    - headline: Wrapper for easy access to user API
      purpose: Server-side npm package providing functions and middleware for easily using the user-api.
      github_name: user-api-client
      description: Under active development

    - headline: Wrapper for easy access to message API
      purpose: Server-side npm package providing functions and middleware for easily using the message-api.
      github_name: message-api-client
      description: Under active development

